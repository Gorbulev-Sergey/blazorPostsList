@*<div class="bg-dark text-light mb-2 rounded d-flex align-items-start justify-content-between">
    <div class="m-3">
        <h5 class="text-white mb-0">@post.Name</h5>
        <div class="text-muted small mb-1">@post.date.ToShortDateString()</div>
        <p>@post.Text</p>
        <select class="btn btn-sm btn-outline-light" @bind="type">
            @foreach (var item in Enum.GetValues(typeof(type)))
            {
                <option>@item</option>
            }
        </select>
        <select class="btn btn-sm btn-outline-light" @bind="published">
            <option value="True">опубликован</option>
            <option value="False">неопубликован</option>
        </select>
    </div>
    <div class="d-flex flex-column m-3">
        <button class="btn btn-sm btn-outline-light mb-1">Смотреть</button>
        <button class="btn btn-sm btn-outline-light mb-1">Изменить</button>
        <button class="btn btn-sm btn-danger" @onclick="() => удалить.InvokeAsync(post)">Удалить</button>
    </div>
</div>*@

<div class="bg-dark text-light mb-2 rounded d-flex">
    <div class="m-3 flex-grow-1 d-flex flex-column justify-content-between">
        <div>
            <h5 class="text-white mb-0">@post.Name</h5>
            <div class="text-muted small mb-1">@post.date.ToShortDateString()</div>
            <p>@post.Text</p>
        </div>
            <div>
                <select class="btn btn-sm btn-outline-light" @bind="type">
                    @foreach (var item in Enum.GetValues(typeof(type)))
                    {
                        <option>@item</option>
                    }
                </select>
                <select class="btn btn-sm btn-outline-light" @bind="published">
                    <option value="True">опубликован</option>
                    <option value="False">неопубликован</option>
                </select>
            </div>
    </div>

    <img class="img-fluid w-25 h-100 rounded-left" src="@post.cover_image" />

    <div class="m-3 d-flex flex-column justify-content-center">
        <button class="btn btn-sm btn-outline-light mb-1">Смотреть</button>
        <button class="btn btn-sm btn-outline-light mb-1">Изменить</button>
        <button class="btn btn-sm btn-danger" @onclick="() => удалить.InvokeAsync(post)">Удалить</button>
    </div>
</div>

@code {
    [Parameter]
    public post post { get; set; }

    [Parameter]
    public EventCallback<post> удалить { get; set; }

    [Parameter]
    public EventCallback обновить { get; set; }

    string type
    {
        get { return post.type; }
        set
        {
            post.type = value;
            обновить.InvokeAsync("");
        }
    }

    string published
    {
        get => post.published.ToString();
        set
        {
            post.published = Boolean.Parse(value);
            обновить.InvokeAsync("");
        }
    }
}
