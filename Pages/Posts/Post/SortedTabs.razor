<div class="mb-3">
    <select class="btn btn-sm btn-dark" @bind="filter1">
        @foreach (var item in Enum.GetValues(typeof(filter1)))
        {
            <option>@item</option>
        }
    </select>
    <select class="btn btn-sm btn-dark" @bind="filter2">
        @foreach (var item in Enum.GetValues(typeof(filter2)))
        {
            <option>@item</option>
        }
    </select>
    <select class="btn btn-sm btn-dark" @bind="filter3">
        @foreach (var item in Enum.GetValues(typeof(filter3)))
        {
            <option>@item</option>
        }
    </select>    
</div>


@code {
    Filter Filter { get; set; } = new Filter();

    [Parameter]
    public EventCallback<Filter> filterChanged { get; set; }

    string filter1
    {
        get => Filter.filter1.ToString();
        set
        {
            Filter.filter1 = (filter1)Enum.Parse(typeof(filter1), value);
            filterChanged.InvokeAsync(Filter);
        }
    }

    string filter2
    {
        get => Filter.filter2.ToString();
        set
        {
            Filter.filter2 = (filter2)Enum.Parse(typeof(filter2), value);
            filterChanged.InvokeAsync(Filter);
        }
    }

    string filter3
    {
        get => Filter.filter3.ToString();
        set
        {
            Filter.filter3 = (filter3)Enum.Parse(typeof(filter3), value);
            filterChanged.InvokeAsync(Filter);
        }
    }
}
